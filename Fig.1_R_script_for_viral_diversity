# alpha diversity

library(vegan)
library(picante)  

# input data
data=read.csv("all_sample_rpkm.tsv",row.names = 1,sep = '\t')
data <- as.data.frame(lapply(data, as.integer))
data <- as.data.frame(data)
data <- data[rowSums(data != 0, na.rm = TRUE) > 0, ]

#define function

alpha_diversity <- function(x, tree = NULL) {
  observed_species <- estimateR(x)[1, ]
  Chao1 <- estimateR(x)[2, ]
  ACE <- estimateR(x)[4, ]
  Shannon <- diversity(x, index = 'shannon',base = 2)
  Simpson <- diversity(x, index = 'simpson') 
  goods_Coverage <- 1 - rowSums(x == 1) / rowSums(x)
  Pielou <- Shannon / log(observed_species, 2)
  
  Shannon <- sprintf("%0.4f", Shannon)
  Simpson <- sprintf("%0.4f", Simpson)
  goods_Coverage <- sprintf("%0.4f", goods_Coverage)
  Pielou <- sprintf("%0.4f", Pielou)
  
  result <- data.frame(observed_species, ACE,Chao1, Shannon, Simpson, goods_Coverage, Pielou)
  
  if (!is.null(tree)) {
    PD_whole_tree <- pd(x, tree, include.root = FALSE)[1]
    names(PD_whole_tree) <- 'PD_whole_tree'
    result <- cbind(result, PD_whole_tree)
    
    result <- data.frame(observed_species, ACE,Chao1, Shannon, Simpson,
                         PD_whole_tree ,goods_Coverage)
  }
  
  
  result
}

all_alpha_index <- alpha_diversity (data)
write.csv(all_alpha_index, 'alpha_diversity.csv', quote = FALSE)

#plot
div <- read.delim('alpha_diversity.csv',header = T, stringsAsFactors = F,sep = ',')

#metadata
group <- read.delim('group.txt',header = T, stringsAsFactors = F)

colnames(div)[1] <- c('ID')
df <- merge(div,group,by = 'ID')
df$city = factor(df$city, levels=c("Hong Kong", "Denver", "New York", "London", "Oslo", "Stockholm"))
df$contient_year = factor(df$contient_year, levels=c("Asia_18", "Asia_19","American_18", "American_19","Europe_18", "Europe_19"))
compaired1 <- list(c("Denver", "Hong Kong"),
                  c("Denver", "London"),
                  c("Denver", "New York"),
                  c("Denver", "Oslo"),
                  c("Denver", "Stockholm"),
                  c("Hong Kong", "London"),
                  c("Hong Kong", "New York"),
                  c("Hong Kong", "Oslo"),
                  c("Hong Kong", "Stockholm"),
                  c("London", "New York"),
                  c("London", "Oslo"),
                  c("London", "Stockholm"),
                  c("New York", "Oslo"),
                  c("New York", "Stockholm"),
                  c("Oslo", "Stockholm"))
compaired2 <- list(c("American_18", "Asia_18"),
                  c("American_18", "Europe_18"),
                  c("American_18", "Asia_19"),
                  c("American_18", "Europe_19"),
                  c("American_19", "Asia_18"),
                  c("American_19", "Europe_18"),
                  c("American_19", "Asia_19"),
                  c("American_19", "Europe_19"),
                  c("Europe_18", "Asia_18"),
                  c("Europe_18", "Asia_19"),
                  c("Europe_19", "Asia_18"),
                  c("Europe_18", "Asia_19"),
                  c("American_18", "American_19"),
                  c("Europe_18", "Europe_19"),
                  c("Asia_18", "Asia_19")
                  )

library("ggplot2")
library("ggsignif")
p <- ggplot(data=df, aes(x=city,y=Shannon))+geom_boxplot(alpha=0.8)+
  geom_boxplot(aes(fill=city),outlier.colour='white',size=0)+
  #geom_jitter(color = 'black') +
  #ylim(0,300)+
  #ylim(1,7)+
  #geom_signif(comparisons = compaired,step_increase = 0.1,map_signif_level = T,test = wilcox.test)+
  theme_bw()
p

# beta diversity

library(vegan)
library(ggplot2)
library(plyr)
library(RColorBrewer)

# input data
otu <- read.delim('all_sample_rpkm.tsv', row.names = 1, sep = ',', stringsAsFactors = FALSE, check.names = FALSE)
otu <- t(otu)
# metadata
group <- read.delim('groups.txt', sep = '\t', stringsAsFactors = F)

#calculation
distance <- vegdist(otu, method = "bray")
pcoa <- cmdscale(distance, k = (nrow(otu) - 1), eig = T)

#adonis2
dune.div <- adonis2(otu ~ Year, data = group, permutations = 999, method="bray")
dune.div
#dispersion
dispersion <- betadisper(distance, group=group$city)
permutest(dispersion,)
dispersion <- betadisper(distance, group=group$city_year)
disper_year <- permutest(dispersion,pairwise = TRUE, permutations = 999)

#pairwise.adonis
#library(pairwiseAdonis)
dune.pairwise.adonis <- pairwise.adonis(x=otu, factors=group$contient_year, sim.function = "vegdist",
                                        sim.method = "bray",
                                        p.adjust.m = "BH",
                                        reduce = NULL,
                                        perm = 999)
dune.pairwise.adonis

# plot

pcoa_eig <- (pcoa$eig)[1:2] / sum(pcoa$eig)
sample_site <- data.frame({pcoa$point})[1:2]
sample_site$names <- rownames(sample_site)
names(sample_site)[1:2] <- c('PCoA1', 'PCoA2')
names(group)[1:2] <- c('names', 'city')
sample_site <- merge(sample_site, group, by = 'names', all.x = T)
sample_site$site <- factor(sample_site$group, levels = c('Hong Kong', 'Denver', 'New York', 'London', 'Oslo', 'Stockholm'))

pcoa_plot <- ggplot(sample_site, aes(PCoA1, PCoA2,color=city)) +
  theme_classic()+
  geom_vline(xintercept = 0, color = 'gray', size = 0.2) + 
  geom_hline(yintercept = 0, color = 'gray', size = 0.2) + 
  stat_ellipse(level=0.9)+
  geom_point(aes(color = city, shape = Year),size = 3)+ 
  scale_color_manual(values = brewer.pal(6,"Set1")) + 
  scale_shape_manual(values = c(17, 16))+
  theme(panel.grid = element_line(color = 'gray', linetype = 2, size = 0.1), 
        panel.background = element_rect(color = 'black', fill = 'transparent'), 
        legend.title=element_blank()
  )+
  labs(x = paste('PCoA1: ', round(100 * pcoa_eig[1], 2), '%'), y = paste('PCoA2: ', round(100 * pcoa_eig[2], 2), '%')) 

pcoa_plot


